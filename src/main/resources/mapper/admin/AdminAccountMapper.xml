<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.someexp.modules.admin.mapper.AdminAccountMapper">

    <resultMap id="ADMIN_ENTITY" type="com.someexp.modules.admin.domain.entity.Admin">
        <id column="admin_id" property="id"/>
        <result column="admin_parent" property="parent"/>
        <result column="admin_name" property="name"/>
        <result column="admin_password" property="password"/>
        <result column="admin_phone" property="phone"/>
        <result column="admin_status" property="status"/>
    </resultMap>

    <resultMap id="ADMIN_VO" type="com.someexp.modules.admin.domain.vo.AdminVO">
        <id column="admin_id" property="id"/>
        <result column="admin_parent" property="parent"/>
        <result column="admin_name" property="name"/>
        <result column="admin_phone" property="phone"/>
        <result column="admin_status" property="status"/>
    </resultMap>

    <select id="checkByPhone" resultType="java.lang.Boolean">
        -- 管理员检查管理员是否存在 --
        SELECT EXISTS(
                       SELECT 1
                       FROM admin
                       WHERE admin_phone = #{phone}
                   ) AS result;
    </select>

    <insert id="save" parameterType="com.someexp.modules.admin.domain.entity.Admin" useGeneratedKeys="true"
            keyProperty="id" keyColumn="admin_id">
        -- 管理员新增管理员 --
        INSERT INTO admin (admin_parent, admin_name, admin_password, admin_phone, admin_status)
        VALUES (#{parent}, #{name}, #{password}, #{phone}, 1);
    </insert>

    <select id="listByPage" resultMap="ADMIN_VO">
        -- 管理员分页列出管理员信息 --
        SELECT *
        FROM admin
        LIMIT #{offset}, #{rowCount}
    </select>

    <select id="countByPage" resultType="int">
        -- 管理员统计管理员数量 --
        SELECT COUNT(*)
        FROM admin
    </select>

    <select id="get" resultMap="ADMIN_ENTITY">
        -- 管理员获取管理员 --
        SELECT *
        FROM admin
        WHERE admin_id = #{id}
    </select>

    <update id="update" parameterType="com.someexp.modules.admin.domain.entity.Admin">
        -- 管理员更新管理员信息 --
        UPDATE admin
        <set>
            <if test="status != null">
                admin_status = #{status}
            </if>
        </set>
        WHERE admin_id = #{id}
    </update>

    <select id="listByParent" resultMap="ADMIN_ENTITY">
        -- 管理员根据父类 id 列出子类管理员 --
        SELECT *
        FROM admin
        WHERE admin_parent = #{parentId}
    </select>

</mapper>
